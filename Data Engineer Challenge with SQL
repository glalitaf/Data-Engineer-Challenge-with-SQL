--Produk DQLab Mart

SELECT 
    no_urut,
    kode_produk, 
    nama_produk, 
    harga 
FROM
    ms_produk
WHERE
    harga between 50000 and 150000;
    
    
--Thumb drive di DQLab Mart
--Menampilkan semua produk yang mengandung kata Flashdisk.
--Nama kolom yang harus ditampilkan: no_urut, kode_produk, nama_produk, dan harga.

SELECT
    no_urut,
    kode_produk,
    nama_produk,
    harga
FROM
    ms_produk
WHERE
    nama_produk LIKE 'Flashdisk%';
    
    
--Pelanggan Bergelar
--Menampilkan hanya nama-nama pelanggan yang hanya memiliki gelar-gelar berikut: S.H, Ir. dan Drs.
--Nama kolom yang harus ditampilkan: no_urut, kode_pelanggan, nama_pelanggan, dan alamat.

SELECT
    no_urut,
    kode_pelanggan,
    nama_pelanggan,
    alamat
FROM
    ms_pelanggan
WHERE
    nama_pelanggan LIKE '%S.H%' OR nama_pelanggan LIKE '%Ir.%' OR nama_pelanggan LIKE '%Drs.%'; 
    

--Mengurutkan Nama Pelanggan
--Menampilkan nama-nama pelanggan dan urutkan hasilnya berdasarkan kolom nama_pelanggan dari yang terkecil ke yang terbesar (A ke Z)

SELECT 
    nama_pelanggan
FROM
    ms_pelanggan
ORDER BY 
    nama_pelanggan ASC;
    
    
--Mengurutkan Nama Pelanggan Tanpa Gelar
--Menampilkan nama-nama pelanggan dan urutkan hasilnya berdasarkan kolom nama_pelanggan dari yang terkecil ke yang terbesar (A ke Z),
--namun gelar tidak boleh menjadi bagian dari urutan. Contoh: Ir. Agus Nugraha harus berada di atas Heidi Goh.

SELECT 
    nama_pelanggan
FROM 
    ms_pelanggan
ORDER BY 
SUBSTRING_INDEX(
    nama_pelanggan, '. ', -1
    );
    
    
--Nama Pelanggan yang Paling Panjang
SELECT
    nama_pelanggan
FROM 
    ms_pelanggan 
WHERE 
    char_length(nama_pelanggan) = (select max(char_length(nama_pelanggan)) from ms_pelanggan);
    
    
 --Nama Pelanggan yang Paling Panjang dan Paling Pendek dengan Gelar
 
SELECT 
    nama_pelanggan
FROM
    ms_pelanggan
WHERE char_length(nama_pelanggan) = (select max(char_length(nama_pelanggan)) from ms_pelanggan)
UNION
SELECT
    nama_pelanggan 
FROM
    ms_pelanggan 
WHERE
    char_length(nama_pelanggan) = (select min(char_length(nama_pelanggan)) from ms_pelanggan);
    
    
--Kuantitas Produk yang Banyak Terjual
--Menampilkan produk yang paling banyak terjual dari segi kuantitas.Jika ada lebih dari 1 produk dengan nilai yang sama, tampilkan semua produk tersebut.

SELECT
    ms_produk.kode_produk,
    ms_produk.nama_produk,
    SUM(tr_penjualan_detail.qty) as total_qty 
FROM 
    ms_produk 
INNER JOIN 
    tr_penjualan_detail 
ON 
    ms_produk.kode_produk = tr_penjualan_detail.kode_produk
GROUP BY 
    ms_produk.kode_produk, ms_produk.nama_produk
HAVING 
    total_qty > 2;
    
    
--Pelanggan Paling Tinggi Nilai Belanjanya

SELECT
    ms_pelanggan.kode_pelanggan,
    ms_pelanggan.nama_pelanggan,
    SUM(tr_penjualan_detail.qty*tr_penjualan_detail.harga_satuan) AS total_harga
FROM 
    ms_pelanggan 
INNER JOIN 
    tr_penjualan ON ms_pelanggan.kode_pelanggan = tr_penjualan.kode_pelanggan
INNER JOIN 
    tr_penjualan_detail ON tr_penjualan.kode_transaksi = tr_penjualan_detail.kode_transaksi
GROUP BY 
    ms_pelanggan.kode_pelanggan, ms_pelanggan.nama_pelanggan
ORDER BY 
    total_harga DESC LIMIT 1;


--Pelanggan yang Belum Pernah Berbelanja

SELECT
    ms_pelanggan.kode_pelanggan,
    ms_pelanggan.nama_pelanggan,
    ms_pelanggan.alamat
FROM 
    ms_pelanggan
WHERE
    ms_pelanggan.kode_pelanggan NOT IN (SELECT tr_penjualan.kode_pelanggan FROM tr_penjualan);
    
    
--Transaksi Belanja dengan Daftar Belanja lebih dari 1

SELECT 
    tr_penjualan_detail.kode_transaksi,
    tr_penjualan.kode_pelanggan,
    ms_pelanggan.nama_pelanggan,
    tr_penjualan.tanggal_transaksi,
COUNT
    (tr_penjualan_detail.kode_produk)
AS 
    jumlah_detail
FROM 
    ms_pelanggan
INNER JOIN 
    tr_penjualan 
ON 
    ms_pelanggan.kode_pelanggan = tr_penjualan.kode_pelanggan
INNER JOIN
    tr_penjualan_detail 
ON 
    tr_penjualan.kode_transaksi = tr_penjualan_detail.kode_transaksi
GROUP BY
    tr_penjualan_detail.kode_transaksi,
    tr_penjualan.kode_pelanggan,
    ms_pelanggan.nama_pelanggan,
    tr_penjualan.tanggal_transaksi
 HAVING 
    jumlah_detail>1;
